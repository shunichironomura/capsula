name: Release
run-name: Release (`${{ github.sha }}`)

on:
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.11"

jobs:
  check-existing-tag:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Get the version
        id: get-version
        run: |
          echo "version=$(poetry version --short)" >> "$GITHUB_OUTPUT"

      - name: Make sure the tag doesn't already exist
        id: check-tag
        run: |
          git fetch --tags
          ! git rev-parse --verify "refs/tags/${{ steps.get-version.outputs.version }}" > /dev/null

  merge_and_publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry

    - name: Publish to PyPI
      run: |
        git fetch --tags
        git checkout ${{ github.event.release.target_commitish }}
        poetry publish --build
      env:
        POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}

    - name: Merge to main
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        gh pr create --title "Merge ${{ github.event.release.target_commitish }} to main" --body "Merging ${{ github.event.release.target_commitish }} to main" --repo ${{ github.repository }} --base main --head ${{ github.event.release.target_commitish }}
        gh pr merge ${{ github.event.release.target_commitish }} --repo ${{ github.repository }} --squash --auto --delete-branch
