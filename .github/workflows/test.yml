name: Test

on:
  push:
    branches:
      - main
    paths-ignore:
      - "reports/**"
      - ".vscode/**"
      - "LICENSE"
      - "README.md"
  pull_request:
    branches:
      - main
    paths-ignore:
      - "reports/**"
      - ".vscode/**"
      - "LICENSE"
      - "README.md"

env:
  PYTHON_VERSION: "3.11"
  POETRY_VERSION: "1.5.1"

jobs:
  ruff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: chartboost/ruff-action@v1

  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Set up Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ env.POETRY_VERSION }}

      - name: Install dependencies
        run: poetry install --no-interaction --with examples

      - name: Run mypy
        run: poetry run --no-interaction mypy .

  pytest:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.11", "3.10", "3.9", "3.8"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Poetry
      uses: abatilo/actions-poetry@v2
      with:
        poetry-version: ${{ env.POETRY_VERSION }}

    - name: Poetry Version
      run: |
        poetry --version

    - name: Install dependencies
      run: |
        poetry install --no-interaction

    - name: Test with pytest
      run: |
        poetry run --no-interaction pytest tests/

  coverage:
    needs: pytest
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Set up Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ env.POETRY_VERSION }}

      - name: Install dependencies
        run: |
          poetry install --no-interaction

      - name: Test with pytest and coverage
        run: |
          poetry run --no-interaction coverage erase
          poetry run --no-interaction coverage run -m pytest tests/
          poetry run --no-interaction coverage report -m
          poetry run --no-interaction coverage xml -o reports/coverage/coverage.xml
          poetry run --no-interaction coverage html --directory reports/coverage/
          poetry run --no-interaction genbadge coverage -i reports/coverage/coverage.xml -o reports/coverage/coverage-badge.svg

      - name: Commit and push
        if: github.event_name == 'pull_request'
        uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          message: "Update coverage report"
          # new_branch: "coverage-${{ github.sha }}"
          push: true

  # create-pull-request:
  #   needs: coverage
  #   runs-on: ubuntu-latest
  #   # Only run on pushes to main
  #   if: github.ref == 'refs/heads/main'
  #   permissions:
  #     pull-requests: write
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Create Pull Request
  #       env:
  #         GH_TOKEN: ${{ github.token }}
  #       run: |
  #         gh pr create --repo ${{ github.repository }} --base main --head "coverage-${{ github.sha }}" --title "Coverage Report" --body "Coverage report for commit ${{ github.sha }}" --label "coverage"
